name: CI
on: [ push, pull_request ]
jobs:
  Build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 14.x ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{matrix.node-version}}
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.node-version}}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci
    - name: Build
      env:
        LOG_DEBUG: 'xsd-schema-validator'
      run: npm run all
  Build-Nodes:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 10.x, 12.x, 14.x ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{matrix.node-version}}
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.node-version}}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci
    - name: Build
      env:
        LOG_DEBUG: 'xsd-schema-validator'
      run: npm run all
  Build-Platforms:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ macos-latest, windows-latest ]
        node-version: [ 14.x ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{matrix.node-version}}
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.node-version}}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci
    - name: Build
      env:
        LOG_DEBUG: 'xsd-schema-validator'
      run: npm run all

  Build-Javas:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [14.x]
        java-home: [ JAVA_HOME_8_X64, JAVA_HOME_11_X64 ]

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js ${{matrix.node-version}}
      uses: actions/setup-node@v2
      with:
        node-version: ${{matrix.node-version}}
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci
    - name: Set JAVA_HOME
      run: |
        echo 'JAVA_HOME<<EOF' >> $GITHUB_ENV
        echo "$${{matrix.java-home}}" >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV
    - name: Build
      env:
        LOG_DEBUG: 'xsd-schema-validator'
      run: npm run all
